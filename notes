DOM - Document object model

Html is a DOM. 
it wil be hierarchical order

HTMl5 semantic elements:
why semantic elements?
    rendering fast
    browser easily understand web page
    content
->table
->nav
->header
->footer
->article
->aside
->section


CSS - to apply web style

1. inline css
2. internal css
3. external css(recommended)

CSS Rules:
    Rule 1: Dot(.) -> class(reuse)
    Rule 2: # ->tag id or control id
    Rule 3: tagname ->html tags or user defined tags

css functions:
    :hover
    :out
    :before
    :after

javascript: client side scripting.
1. inline js
2. internal js
3. external js(recommended)

javascript datatypes:
->var (global scope)
->let (local scope) - typescript language

javascript functions:

    function functionName(){
        //statments
        return //
    }

DOM Access in javascript

javascript events
->onclick
->onchange
->onkeypress
->onkeyup
->onblur
->onfocus
->onmouseover
->onmouseout
->ondoubleclick
->onload

Callback function

setTimeout()
setInterval()

->splice
How to delete an element from the array?


Bootstrap Css:

RWD - Responsive Web Design

Steps:

1. add meta tag and define screen size
2. add bootstrap css file
3. add container


bootstrap form classes

1. form-group
2. form-control

bootstrap Grid
1. Row & Column based
2. Every row should be 12 column

Breakpoints:

 xs-very small
 sm-small
 md -medium
 lg-large
 xl-x large



https://getbootstrap.com/


 Promise
 Async/await


 var result =new Promise(resolve,reject){
    var age=20;
    if(age>20)
        resolve("Eligible")//success
    else
        reject("Not Eligible")
 }

var output=result.then().then().catch();
 console.log(output);

 State & Props


React Routing setup:
install command
->npm install react-router-dom

in html <a href="url">

Route -> Url localhost:3000/bookings
       Route Path- bookings
in react <Link to={"movies"}>   
    <Route path="movies">
    ->render <movieComponet>
         <Link to={"bookings"}> ->render <bookingsComponet>
         <Link to={"user"}> ->render <userComponet>
         <Link to={"contact"}> ->render <contactComponet>




React Hooks:
    Functional component
1. useState() -> to implment state logi into function component
2. useEffect() -> it will trigger automatically  if any changes in functional component
3. useContext()->to avoid call tree components and pass data directly to any component
4. useReducer(); - update data in the database or datacontext



<C1></C1>

<C2></C2>

<C3></C3> -> title

useContext() -

var myTitle= createContext(title)
